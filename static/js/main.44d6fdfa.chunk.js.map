{"version":3,"sources":["serviceWorker.ts","components/muscle-detail.tsx","components/body-image.tsx","components/video-meta.tsx","components/video-detail.tsx","pages/muscle.tsx","pages/video.tsx","routing.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","GET_MUSCLE_DETAIL","gql","MuscleDetail","videoDom","muscleId","useQuery","variables","data","loading","error","message","muscle","videos","className","map","value","name","description","BodyImage","onMuscleClick","version","id","viewBox","onClick","points","VideoMeta","video","Grid","container","spacing","item","sm","xs","md","to","src","imageLink","alt","GET_VIDEO_DETAIL","VideoDetail","videoId","title","width","height","videoLink","MusclePage","props","component","state","bind","this","setState","Component","VideoPage","params","Routing","console","log","process","basename","exact","path","client","ApolloClient","uri","App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"4MAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,6XCXC,IAAMC,EAAoBC,IAAH,KA2DfC,EApC0B,SAAC,GAAgB,IAWpDC,EAXqCC,EAAc,EAAdA,SAAc,EAKnDC,YAEAL,EACF,CAAEM,UAAW,CAAEF,cANfG,EAFqD,EAErDA,KACAC,EAHqD,EAGrDA,QACAC,EAJqD,EAIrDA,MASF,OAAIL,EACAI,EAAgB,yCAChBC,EAAc,qCAAWA,EAAMC,SAC9BH,GAASA,EAAKI,QACfJ,EAAKI,QAAUJ,EAAKI,OAAOC,SAC7BT,EACA,yBAAKU,UAAU,eACb,2BAAG,sCACFN,EAAKI,OAAOC,OAAOE,KAAI,SAACC,GACvB,OAAO,kBAAC,EAAcA,QAM1B,kBAAC,WAAD,KACE,4BAAMR,EAAKI,OAAOK,MAClB,2BAAKT,EAAKI,OAAOM,aAChBd,IAf6B,wCAHb,gEC6GRe,EAjJ6B,SAAC,GAA+B,IAA9Bd,EAA6B,EAA7BA,SAAUe,EAAmB,EAAnBA,cAGtD,OACE,yBAAKC,QAAQ,MAAMC,GAAG,MAAMR,UAAU,aAAaS,QAAQ,eAC3D,6BAASC,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,mBAAmBG,OAAO,oDAC/B,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,oBAAoBG,OAAO,kDAChC,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,wBAAwBG,OAAO,oFACpC,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,eAAeG,OAAO,gEAC3B,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,gBAAgBG,OAAO,yDAC5B,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,iCAAiCG,OAAO,8CAC7C,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,YAAYG,OAAO,iEACxB,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,aAAaG,OAAO,+DACzB,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,sBAAsBG,OAAO,4DAClC,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,uBAAuBG,OAAO,qDACnC,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,aAAaG,OAAO,0EACzB,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,SAASG,OAAO,4DACrB,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,SAASG,OAAO,oFACrB,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,QAAQG,OAAO,uEACpB,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,QAAQG,OAAO,oEACpB,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,mBAAmBG,OAAO,wEAC/B,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,yBAAyBG,OAAO,4DACrC,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,YAAYG,OAAO,oDACxB,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,aAAaG,OAAO,2GACzB,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,0BAA0BG,OAAO,mEACtC,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,wBAAwBG,OAAO,qDACpC,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,QAAQG,OAAO,8CACpB,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,kBAAkBG,OAAO,oDAC9B,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,QAAQG,OAAO,oDACpB,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,QAAQG,OAAO,gFACpB,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,QAAQG,OAAO,wDACpB,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,yBAAyBG,OAAO,4EACrC,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,uBAAuBG,OAAO,gEACnC,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,iCAAiCG,OAAO,4CAC7C,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,wBAAwBG,OAAO,oDACpC,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,gCAAgCG,OAAO,oDAC5C,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,yBAAyBG,OAAO,8CACrC,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,kCAAkCG,OAAO,gCAC9C,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,YAAYG,OAAO,gEACxB,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,iBAAiBG,OAAO,sEAC7B,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,kBAAkBG,OAAO,sEAC9B,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,qBAAqBG,OAAO,kDACjC,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,sBAAsBG,OAAO,kDAClC,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,wBAAwBG,OAAO,mEACpC,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,yBAAyBG,OAAO,mEACrC,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,uBAAuBG,OAAO,oDACnC,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,wBAAwBG,OAAO,oDACpC,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,sBAAsBG,OAAO,qEAClC,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,uBAAuBG,OAAO,4CACnC,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,sBAAsBG,OAAO,4CAClC,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,uBAAuBG,OAAO,4CACnC,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,2BAA2BG,OAAO,4DACvC,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,qBAAqBG,OAAO,oDACjC,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,0BAA0BG,OAAO,4DACtC,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,qBAAqBG,OAAO,oDACjC,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,SAASG,OAAO,oDACrB,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,SAASG,OAAO,oDACrB,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,SAASG,OAAO,oDACrB,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,SAASG,OAAO,oDACrB,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,aAAaG,OAAO,4EACzB,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,aAAaG,OAAO,4EACzB,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,aAAaG,OAAO,4CACzB,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,aAAaG,OAAO,4CACzB,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,iBAAiBG,OAAO,oCAC7B,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,kBAAkBG,OAAO,oCAC9B,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,SAASG,OAAO,4EACrB,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,SAASG,OAAO,oEACrB,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,SAASG,OAAO,4DACrB,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,SAASG,OAAO,oEACrB,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,SAASG,OAAO,oDACrB,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,SAASG,OAAO,oDACrB,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,YAAYG,OAAO,oCACxB,6BAASD,QAAS,kBAAIJ,EAAc,IAAIN,UAAW,eAA8B,IAAbT,EAAiB,oBAAsB,IACzGiB,GAAG,YAAYG,OAAO,sC,QChIbC,EAdoB,SAACC,GAClC,OACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGhB,UAAU,cACpC,kBAACc,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAC5B,kBAAC,IAAD,CAAMC,GAAI,UAAUR,EAAML,IAAI,yBAAKc,IAAKT,EAAMU,UAAWC,IAAKX,EAAMV,SAEtE,kBAACW,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,GAAIC,GAAI,GAC5B,4BAAI,kBAAC,IAAD,CAAMC,GAAI,UAAUR,EAAML,IAAKK,EAAMV,OACzC,2BAAIU,EAAMT,gB,8MCPX,IAAMqB,EAAmBrC,IAAH,KA8CdsC,EA3BwB,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAAa,EAKhDnC,YAEAiC,EACF,CAAEhC,UAAW,CAAEkC,aANfjC,EAFkD,EAElDA,KACAC,EAHkD,EAGlDA,QACAC,EAJkD,EAIlDA,MAOF,OAAI+B,EACAhC,EAAgB,yCAChBC,EAAc,qCAAWA,EAAMC,SAC9BH,GAASA,EAAKmB,MAGjB,kBAAC,WAAD,KACE,4BAAMnB,EAAKmB,MAAMV,MACjB,2BAAKT,EAAKmB,MAAMT,aAChB,4BAAQwB,MAAOlC,EAAKmB,MAAMV,KAAM0B,MAAM,MAAMC,OAAO,MACjDR,IAAM5B,EAAKmB,MAAMkB,aAPU,wCAHb,+DCIPC,E,kDA7Bb,WAAYC,GAAyB,IAAD,8BAClC,cAAMA,IAIRC,UALoC,eAElC,EAAKC,MAAQ,GACb,EAAK7B,cAAgB,EAAKA,cAAc8B,KAAnB,gBAHa,E,0DAOtB7C,GACZ8C,KAAKC,UAAU,SAAAH,GAAK,MAClB,CACE5C,SAAUA,Q,+BAMd,OACE,kBAACuB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGhB,UAAU,yBACpC,kBAACc,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,GAAID,GAAI,GAAIE,GAAI,GAC7B,kBAAC,EAAc,CAAC7B,SAAU8C,KAAKF,MAAM5C,SAAUe,cAAe+B,KAAK/B,iBAErE,kBAACQ,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,GAAID,GAAI,GAAIE,GAAI,GAC7B,kBAAC,EAAmB,CAAC7B,SAAU8C,KAAKF,MAAM5C,iB,GAvB3BgD,aCaVC,E,uKAXX,IAAMb,EAAUU,KAAKJ,MAAM/C,MAAMuD,OAAOjC,GACxC,OACE,kBAACM,EAAA,EAAD,CAAMC,WAAS,EAACf,UAAU,wBACxB,kBAACc,EAAA,EAAD,CAAMG,MAAI,EAACE,GAAI,GAAID,GAAI,GAAIE,GAAI,IAC7B,kBAAC,EAAgB,CAACO,QAASA,U,GANbY,aCDT,SAASG,IAEtB,OADAC,QAAQC,IAAIC,gDAEV,kBAAC,IAAD,CAAQC,SAAUD,gDAChB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,aAAad,UAAWM,MCR5C,IAAMS,EAAS,IAAIC,IAAa,CAC9BC,IAAKN,uEAICO,EAAM,kBACV,kBAAC,IAAD,CAAgBH,OAAQA,GACtB,kBAACP,EAAD,QAIJW,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SRuH7C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAnE,GACL+C,QAAQ/C,MAAMA,EAAMC,c","file":"static/js/main.44d6fdfa.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { Fragment } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nimport { Muscle } from '../types/muscle';\nimport { VideoMeta } from './index';\n\nexport const GET_MUSCLE_DETAIL = gql`\n  query MuscleDetail($muscleId: ID!) {\n    muscle(id: $muscleId) {\n      name\n      description \n      videos {\n        id\n        name\n        imageLink\n        videoLink\n      }\n    }\n  }\n`;\n\ninterface MuscleId {\n  muscleId?: number\n}\n\ninterface MuscleRespond {\n  muscle: Muscle\n}\n\nconst MuscleDetail: React.FC<MuscleId> = ({muscleId}) => {\n  const { \n    data, \n    loading, \n    error \n  } = useQuery<\n    MuscleRespond , MuscleId\n    >(GET_MUSCLE_DETAIL,\n    { variables: { muscleId } }\n  );\n  \n  let videoDom;\n\n  if(!muscleId) return <h2>Please select a muscle to start</h2>;\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR: {error.message}</p>;\n  if (!data || !data.muscle) return <p>Not found</p>;\n  if (data.muscle && data.muscle.videos) {\n    videoDom = \n    <div className=\"videos-list\">\n      <p><b>Videos</b></p>\n      {data.muscle.videos.map((value) => {\n        return <VideoMeta {...value}></VideoMeta>\n      })}\n    </div>\n  }\n\n  return (\n    <Fragment>\n      <h2>{ data.muscle.name }</h2>\n      <p>{ data.muscle.description}</p>\n      {videoDom}\n    </Fragment>\n  )\n}\n\nexport default MuscleDetail;","import React from 'react';\n\ninterface BodyImageProps {\n  muscleId?: number;\n  onMuscleClick: Function;\n}\n\nconst BodyImage: React.FC<BodyImageProps> = ({muscleId, onMuscleClick}) => {\n\n\n  return (\n    <svg version=\"1.1\" id=\"Map\" className=\"body-image\" viewBox=\"0 0 578 538\">\n    <polygon onClick={()=>onMuscleClick(3)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Left_Pec_Mayoris\" points=\"144,116,142,149,159,156,183,150,190,130,169,116\" />\n    <polygon onClick={()=>onMuscleClick(3)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Right_Pec_Mayoris\" points=\"90,128,94,150,117,156,135,149,134,117,109,117\" />\n    <polygon onClick={()=>onMuscleClick(3)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Left_Rectus_Abdominis\" points=\"155,159,159,171,160,205,160,241,155,255,152,269,143,278,142,221,141,179,142,154\" />\n    <polygon onClick={()=>onMuscleClick(3)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Left_Oblique\" points=\"185,169,182,154,161,160,164,171,165,218,178,207,180,185,182\" />\n    <polygon onClick={()=>onMuscleClick(3)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Right_Oblique\" points=\"100,206,98,190,93,169,96,154,117,159,113,169,113,219\" />\n    <polygon onClick={()=>onMuscleClick(1)} className={\"body-piece \" + (muscleId === 1 ? 'body-piece_active' : '')}\n      id=\"Right_Biceps_Brachii_Long_Head\" points=\"58,181,61,189,73,176,88,146,85,135,67,151\" />\n    <polygon onClick={()=>onMuscleClick(3)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Left_Neck\" points=\"153,72,141,96,141,110,168,112,190,124,187,104,172,100,160,89\" />\n    <polygon onClick={()=>onMuscleClick(3)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Right_Neck\" points=\"88,124,91,105,106,100,118,88,126,74,137,97,136,110,110,111\" />\n    <polygon onClick={()=>onMuscleClick(3)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Left_Deltoids_Front\" points=\"209,144,212,131,211,115,203,107,191,103,194,119,192,130\" />\n    <polygon onClick={()=>onMuscleClick(3)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Right_Deltoids_Front\" points=\"86,130,69,144,66,131,67,114,77,105,87,105,83,120\" />\n    <polygon onClick={()=>onMuscleClick(3)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Head_Front\" points=\"121,21,115,43,120,62,130,71,139,76,151,69,158,61,162,39,157,20,139,14\" />\n    <polygon onClick={()=>onMuscleClick(3)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"GROINS\" points=\"146,284,150,320,164,284,169,259,176,245,164,241,156,270\" />\n    <polygon onClick={()=>onMuscleClick(3)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"GROINS\" points=\"134,285,127,321,120,298,116,291,114,277,110,265,102,244,114,240,119,257,124,272\" />\n    <polygon onClick={()=>onMuscleClick(3)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"QUADS\" points=\"102,256,108,279,108,327,101,350,93,339,89,308,86,287,89,261,96,246\" />\n    <polygon onClick={()=>onMuscleClick(3)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"QUADS\" points=\"112,331,111,289,118,304,126,331,122,345,115,372,106,373,104,357\" />\n    <polygon onClick={()=>onMuscleClick(3)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Right_Knee_Front\" points=\"100,357,102,365,104,375,106,384,103,398,90,398,84,388,84,375,91,367\" />\n    <polygon onClick={()=>onMuscleClick(3)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Left_Tibialis_Anterior\" points=\"192,407,197,390,205,409,212,425,209,474,212,493,200,493\" />\n    <polygon onClick={()=>onMuscleClick(3)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Left_Shin\" points=\"195,492,188,404,177,402,174,412,174,419,178,448\" />\n    <polygon onClick={()=>onMuscleClick(3)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Right_Shin\" points=\"104,402,105,412,105,423,103,436,103,447,96,460,92,473,83,491,84,474,86,456,87,444,88,430,90,416,91,403\" />\n    <polygon onClick={()=>onMuscleClick(3)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Right_Tibialis_Anterior\" points=\"78,491,85,418,86,407,81,392,78,400,72,410,68,425,71,475,68,493\" />\n    <polygon onClick={()=>onMuscleClick(3)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Right_Brachioradialis\" points=\"32,231,42,198,53,186,57,196,64,194,28,253,17,259\" />\n    <polygon onClick={()=>onMuscleClick(3)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"QUADS\" points=\"97,353,82,371,80,349,80,326,83,294,89,341\" />\n    <polygon onClick={()=>onMuscleClick(3)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Left_Knee_Front\" points=\"178,357,194,376,194,387,188,399,176,398,171,384\" />\n    <polygon onClick={()=>onMuscleClick(3)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"QUADS\" points=\"193,291,198,318,198,358,195,371,180,353,189,341\" />\n    <polygon onClick={()=>onMuscleClick(3)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"QUADS\" points=\"172,273,175,259,181,246,189,262,191,288,184,340,177,351,170,329,169,287,190\" />\n    <polygon onClick={()=>onMuscleClick(3)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"QUADS\" points=\"163,371,153,330,166,293,167,333,174,356,171,373,171\" />\n    <polygon onClick={()=>onMuscleClick(3)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Right_Rectus_Abdominis\" points=\"124,158,136,154,137,179,136,221,135,277,126,268,117,238,117,206,118,172\" />\n    <polygon onClick={()=>onMuscleClick(3)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Left_Brachioradialis\" points=\"224,185,221,194,213,193,250,255,262,260,246,233,237,201,186\" />\n    <polygon onClick={()=>onMuscleClick(1)} className={\"body-piece \" + (muscleId === 1 ? 'body-piece_active' : '')}\n      id=\"Left_Biceps_Brachii_Short_Head\" points=\"187,150,187,165,203,192,207,186,202,179\" />\n    <polygon onClick={()=>onMuscleClick(3)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Left_Flexor_Digitorum\" points=\"207,191,207,204,214,220,226,234,243,262,249,258\" />\n    <polygon onClick={()=>onMuscleClick(1)} className={\"body-piece \" + (muscleId === 1 ? 'body-piece_active' : '')}\n      id=\"Left_Biceps_Brachii_Long_Head\" points=\"192,135,189,148,204,176,217,190,220,183,210,150\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Right_Flexor_Digitorum\" points=\"34,262,50,236,63,220,70,203,69,190,29,256\" />\n    <polygon onClick={()=>onMuscleClick(1)} className={\"body-piece \" + (muscleId === 1 ? 'body-piece_active' : '')}\n      id=\"Right_Biceps_Brachii_Short_Head\" points=\"72,184,90,150,90,163,73,193\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Head_Back\" points=\"448,6,437,8,425,19,424,36,435,53,460,53,468,38,469,17,460,9\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Left_Trapezius\" points=\"434,57,441,57,440,96,441,158,419,131,412,102,402,92,421,84,432,70\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Right_Trapezius\" points=\"452,57,460,57,462,70,472,83,491,92,481,101,474,131,452,158,454,96\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Left_Deltoids_Back\" points=\"398,93,383,98,370,110,372,132,386,122,393,115\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Right_Deltoids_Back\" points=\"496,93,513,99,523,111,521,132,505,121,499,112\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Left_Latissimus_Dorsi\" points=\"402,97,395,121,396,136,409,183,440,173,440,162,415,133,408,103\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Right_Latissimus_Dorsi\" points=\"491,97,498,122,497,138,484,183,453,173,453,162,478,134,485,104\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 2 ? 'body-piece_active' : '')}\n      id=\"Left_Triceps_Lateral\" points=\"392,123,371,137,363,176,368,198,380,156,392,137\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 2 ? 'body-piece_active' : '')}\n      id=\"Right_Triceps_Lateral\" points=\"502,124,522,137,531,178,525,199,512,154,501,137\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 2 ? 'body-piece_active' : '')}\n      id=\"Left_Triceps_Medial\" points=\"9392,-118143,9392,-118167,9383,-118183,9374,-118188,9382,-118160\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 2 ? 'body-piece_active' : '')}\n      id=\"Right_Triceps_Medial\" points=\"500,143,510,158,518,188,509,183,500,168\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Left_Erector_Spinae\" points=\"441,177,410,187,412,202,445,246,439,201\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Right_Erector_Spinae\" points=\"452,177,483,187,481,202,448,246,454,203\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Right_Extensor_Digitorum\" points=\"532,184,543,202,548,227,564,256,555,251,536,216,527,203\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Right_Flexor_Carpi\" points=\"520,193,511,189,515,205,543,250,548,262,551,252\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Left_Extensor_Digitorum\" points=\"361,184,350,203,345,226,329,256,338,251,358,214,366,201\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Right_Flexor_Carpi\" points=\"373,193,381,189,378,204,351,248,345,261,341,252\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"GLUTES\" points=\"434,240,400,261,399,285,403,302,440,291,445,276\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"GLUTES\" points=\"459,239,449,275,452,290,489,302,493,286,492,261\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"GROINS\" points=\"442,295,434,295,426,301,435,345,443,325,444,310\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"GROINS\" points=\"451,294,460,296,468,302,458,345,451,326,449,310\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"HAMSTRINGS\" points=\"397,293,402,310,415,302,412,324,410,359,398,378,397,351,394,338,393,315\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"HAMSTRINGS\" points=\"497,292,492,309,479,302,483,327,485,359,496,378,497,353,500,340,502,316\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"HAMSTRINGS\" points=\"420,301,433,349,424,398,414,365,416,324\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"HAMSTRINGS\" points=\"474,301,478,326,480,366,470,398,461,350\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Left_Knee_Back\" points=\"410,366,402,380,408,397,417,388\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"Right_Knee_Back\" points=\"485,367,477,389,486,397,492,380\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"CALVES\" points=\"398,383,396,399,387,428,385,459,389,469,396,460,399,429,404,408,404,398\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"CALVES\" points=\"417,394,412,400,407,410,402,430,400,457,409,476,420,454,421,403\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"CALVES\" points=\"477,394,473,402,474,454,485,475,495,457,491,428,486,406\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"CALVES\" points=\"495,383,499,402,507,427,509,459,504,468,499,461,495,428,489,401\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"CALVES\" points=\"396,466,400,466,408,480,401,523,396,508,392,472\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"CALVES\" points=\"493,466,498,466,502,472,498,507,494,522,487,481\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"PERONEALS\" points=\"390,484,395,521,390,528,387,518\" />\n    <polygon onClick={()=>onMuscleClick(2)} className={\"body-piece \" + (muscleId === 3 ? 'body-piece_active' : '')}\n      id=\"PERONEALS\" points=\"504,482,499,521,503,528,508,517\" />\n</svg>\n  )\n}\n\nexport default BodyImage;","import React from 'react';\nimport { Video } from '../types/video';\nimport Grid from '@material-ui/core/Grid';\nimport { Link } from 'react-router-dom';\n\nconst VideoMeta: React.FC<Video> = (video) => {\n  return (\n    <Grid container spacing={1} className=\"video-meta\">\n      <Grid item sm={4} xs={12} md={4}>\n        <Link to={'/video/'+video.id}><img src={video.imageLink} alt={video.name}></img></Link>\n      </Grid>\n      <Grid item sm={8} xs={12} md={8}>\n        <h3><Link to={'/video/'+video.id}>{video.name}</Link></h3>\n        <p>{video.description}</p>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default VideoMeta;\n","import React, { Fragment } from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nimport { Video } from '../types/video';\n\nexport const GET_VIDEO_DETAIL = gql`\n  query VideoDetail($videoId: ID!) {\n    video(id: $videoId) {\n      id\n      name\n      description\n      videoLink\n    }\n  }\n`;\n\ninterface VideoId {\n  videoId?: number\n}\n\ninterface VideoRespond {\n  video: Video\n}\n\nconst VideoDetail: React.FC<VideoId> = ({videoId}) => {\n  const { \n    data, \n    loading, \n    error \n  } = useQuery<\n    VideoRespond , VideoId\n    >(GET_VIDEO_DETAIL,\n    { variables: { videoId } }\n  );\n  \n  if(!videoId) return <h2>Please select a video to start</h2>;\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR: {error.message}</p>;\n  if (!data || !data.video) return <p>Not found</p>;\n\n  return (\n    <Fragment>\n      <h1>{ data.video.name }</h1>\n      <p>{ data.video.description }</p>\n      <iframe title={data.video.name} width=\"420\" height=\"315\"\n        src={ data.video.videoLink }>\n      </iframe>\n    </Fragment>\n  )\n}\n\nexport default VideoDetail;","import React, { Component } from 'react';\n\nimport { MuscleDetail, BodyImage } from '../components'; \nimport Grid from '@material-ui/core/Grid';\n\ninterface MusclePageProps {}\ninterface MusclePageState {\n  muscleId?: number;\n}\n\nclass MusclePage extends Component<MusclePageProps, MusclePageState> {\n  constructor(props: MusclePageProps) {\n    super(props);\n    this.state = {}\n    this.onMuscleClick = this.onMuscleClick.bind(this);\n  }\n  component = this;\n \n  onMuscleClick(muscleId: number) {\n    this.setState( state => (\n      {\n        muscleId: muscleId\n      }\n    ));\n  }\n\n  render() {\n    return (\n      <Grid container spacing={2} className=\"muscle-page-container\">\n        <Grid item xs={12} sm={12} md={6}> \n          <BodyImage {...{muscleId: this.state.muscleId, onMuscleClick: this.onMuscleClick}}></BodyImage>\n        </Grid>\n        <Grid item xs={12} sm={12} md={6}>\n          <MuscleDetail  {... {muscleId: this.state.muscleId}} />\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default MusclePage","import React, { Component } from 'react';\n\nimport { VideoDetail } from '../components'; \nimport Grid from '@material-ui/core/Grid';\n\ninterface VideoPageProps {\n  match? :any\n}\ninterface VideoPageState {}\n\nclass VideoPage extends Component<VideoPageProps, VideoPageState> {\n  render() {\n    const videoId = this.props.match.params.id;\n    return (\n      <Grid container className=\"video-page-container\">\n        <Grid item xs={12} sm={12} md={12}> \n          <VideoDetail {...{videoId: videoId }} />\n        </Grid>\n      </Grid>\n    )\n  }\n}\n\nexport default VideoPage","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport MusclePage from './pages/muscle';\nimport VideoPage from './pages/video';\n\nexport default function Routing() {\n  console.log(process.env.REACT_APP_PUBLIC_URL);\n  return (\n    <Router basename={process.env.REACT_APP_PUBLIC_URL}>\n      <Switch>\n        <Route exact path=\"/\">\n          <MusclePage />\n        </Route>\n        <Route path=\"/video/:id\" component={VideoPage} />\n      </Switch>\n    </Router>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport * as serviceWorker from './serviceWorker';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport Routing from './routing'\n\n\nconst client = new ApolloClient({\n  uri: process.env.REACT_APP_API,\n});\n\n\n  const App = () => (\n    <ApolloProvider client={client}>\n      <Routing />\n    </ApolloProvider>\n  );\n  \n  ReactDOM.render(<App />, document.getElementById('root'));\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}